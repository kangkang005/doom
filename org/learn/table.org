#+title: Table

#+NAME: demo
| name   | price | number | cost |
|--------+-------+--------+------|
| apple  |  5.84 |      3 |      |
| orange |     6 |      2 |      |
| banana |   5.9 |      4 |      |

* calculation
#+NAME: mul
| name   | price | number |  cost |
|--------+-------+--------+-------|
| apple  |  5.84 |      3 | 17.52 |
| orange |     6 |      2 |    12 |
| banana |   5.9 |      4 |  23.6 |
#+TBLFM: $4=$3*$2

* align
#+NAME: align_at_header
|  name  | price | number | cost |
|  <c>   | <l>   |    <r> | <c>  |
|--------+-------+--------+------|
| apple  | 5.84  |      3 |      |
| orange | 6     |      2 |      |
| banana | 5.9   |      4 |      |

#+NAME: align_at_cell
|  name  | price | number | cost |
|--------+-------+--------+------|
|  <c>   |   <r> | <l>    | <c>  |
| apple  |  5.84 | 3      |      |
| orange |     6 | 2      |      |
| banana |   5.9 | 4      |      |

* reference
#+NAME: range_ref
| name   | price | number | cost |
|--------+-------+--------+------|
| apple  |  5.84 |      3 |      |
| orange |     6 |      2 |      |
| banana |   5.9 |      4 |      |
#+TBLFM: $1='(identity remote(demo, @@#$1))::$2='(identity remote(demo, @@#$2))::$3='(identity remote(demo, @@#$3))

#+NAME: cell_ref
| name   | price | number | cost |
|--------+-------+--------+------|
| apple  |  5.84 |        |      |
| orange |       |        |      |
| banana |       |        |      |
#+TBLFM: $1=remote(demo, @@#$1)::@2$2=remote(demo, @2$2)

* elisp
#+NAME: elisp
| name   | price | number |               cost |
|--------+-------+--------+--------------------|
| apple  |  5.84 |      3 |              17.52 |
| orange |     6 |      2 |                 12 |
| banana |   5.9 |      4 |               23.6 |
|--------+-------+--------+--------------------|
| total  |       |        | 53.120000000000005 |
#+TBLFM: @>$>='(+ @2$>..@4$>);N f1

* if
#+NAME: if
| name   | price | number | need_buy? |
|--------+-------+--------+-----------|
| apple  |  5.84 |      3 | yes       |
| orange |     6 |      2 | no        |
| banana |   5.9 |      4 | yes       |
#+TBLFM: $>=if($2*$3>15, string("yes"), string("no"))

#+NAME: if_null_cell
| name   | price | number | need_buy? |
|--------+-------+--------+-----------|
| apple  |       |        | no        |
| orange |     6 |      2 | no        |
| banana |   5.9 |      4 | yes       |
#+TBLFM: $>=if($2*$3>15, string("yes"), string("no"))

* source block with python
** return
# use return statement
# Entire source block will get indented and used as the body of main()
# By default, lists and tuples are converted to Org tables automatically
#+begin_src python :var table_data=demo
return table_data
#+end_src

#+RESULTS:
| apple  | 5.84 | 3 |   |
| orange |    6 | 2 |   |
| banana |  5.9 | 4 |   |

** var
# define variable by var
# Extracting data from an org-mode table
#+begin_src python :var string="hello world" :var table_data=demo :results output
print(string)
print(table_data)
#+end_src

#+RESULTS:
: hello world
: [['apple', 5.84, 3, ''], ['orange', 6, 2, ''], ['banana', 5.9, 4, '']]

** result
*** table
# default to table
#+begin_src python :var table_data=demo :results table
return table_data
#+end_src

#+RESULTS:
| apple  | 5.84 | 3 |   |
| orange |    6 | 2 |   |
| banana |  5.9 | 4 |   |

*** verbatim
# output to list by verbatim
#+begin_src python :var table_data=demo :results verbatim
return table_data
#+end_src

#+RESULTS:
: [['apple', 5.84, 3, ''], ['orange', 6, 2, ''], ['banana', 5.9, 4, '']]

*** print
# output to print
#+begin_src python :var table_data=demo :results output
print("hello world")
print(table_data)
#+end_src

#+RESULTS:
: hello world
: [['apple', 5.84, 3, ''], ['orange', 6, 2, ''], ['banana', 5.9, 4, '']]

*** session
# don't use return statement
#+begin_src python :var table_data=demo :session
table_data
#+end_src

#+RESULTS:
| apple  | 5.84 | 3 |   |
| orange |    6 | 2 |   |
| banana |  5.9 | 4 |   |

*** import pandas
#+begin_src python :var table_data=demo
import numpy as np
import pandas as pd
df = pd.DataFrame(table_data)
df.iloc[:,3] = df.iloc[:,1] * df.iloc[:,2]

return df
#+end_src

#+RESULTS:
:         0     1  2      3
: 0   apple  5.84  3  17.52
: 1  orange  6.00  2   12.0
: 2  banana  5.90  4   23.6

*** import matplotlib
#+begin_src python :session :results file link :exports results :var image="images/myfig.png"
import matplotlib
import matplotlib.pyplot as plt
fig=plt.figure(figsize=(3,2))
plt.plot([1,3,2])
fig.tight_layout()

plt.savefig(image)
image # return this to org-mode
#+end_src

#+RESULTS:
[[file:images/myfig.png]]
